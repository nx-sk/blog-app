{"version":3,"file":"TestAuth-CNxJM93w.js","sources":["../../node_modules/@chakra-ui/react/dist/esm/code/code.mjs","../../src/pages/TestAuth.tsx"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Code = forwardRef(function Code2(props, ref) {\n  const styles = useStyleConfig(\"Code\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.code,\n    {\n      ref,\n      className: cx(\"chakra-code\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        ...styles\n      }\n    }\n  );\n});\nCode.displayName = \"Code\";\n\nexport { Code };\n","import React, { useEffect } from 'react'\r\nimport { Box, VStack, Text, Button, Heading, Code } from '@chakra-ui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { supabase } from '../services/supabase'\r\n\r\nconst TestAuth = () => {\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    // 認証コールバックのハンドリング\r\n    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\n      if (import.meta.env.DEV) {\n        console.log('Auth event:', event)\n        console.log('Session:', session)\n      }\n      \n      if (import.meta.env.DEV && event === 'SIGNED_IN') {\n        console.log('User signed in successfully!')\n      }\n    })\n\r\n    // 現在のセッションを確認\r\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      if (import.meta.env.DEV) {\n        console.log('Current session:', session)\n      }\n    })\n\r\n    return () => {\r\n      authListener.subscription.unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const { data, error } = await supabase.auth.signInWithOAuth({\r\n        provider: 'google',\r\n        options: {\r\n          redirectTo: `${window.location.origin}/test-auth`,\r\n        },\r\n      })\r\n\r\n      if (error) {\r\n        console.error('Login error:', error)\r\n        alert(`Error: ${error.message}`)\r\n      } else {\n        if (import.meta.env.DEV) {\n          console.log('Login initiated:', data)\n        }\n      }\n    } catch (err) {\r\n      console.error('Unexpected error:', err)\r\n    }\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    const { error } = await supabase.auth.signOut()\r\n    if (error) {\n      console.error('Logout error:', error)\n    } else {\n      if (import.meta.env.DEV) {\n        console.log('Logged out successfully')\n      }\n    }\n  }\r\n\r\n  const checkSession = async () => {\r\n    const { data: { session }, error } = await supabase.auth.getSession()\r\n    if (error) {\n      console.error('Session check error:', error)\n    } else {\n      if (import.meta.env.DEV) {\n        console.log('Current session:', session)\n      }\n      alert(session ? `Logged in as: ${session.user.email}` : 'Not logged in')\n    }\n  }\r\n\r\n  return (\r\n    <Box p={8}>\r\n      <VStack spacing={6} align=\"start\">\r\n        <Heading>Google認証テスト</Heading>\r\n        \r\n        <Text>このページでGoogle認証の動作を確認できます。</Text>\r\n        \r\n        <Code p={2}>\r\n          Console (F12) でログを確認してください\r\n        </Code>\r\n\r\n        <VStack spacing={4}>\r\n          <Button colorScheme=\"red\" onClick={handleGoogleLogin}>\r\n            Googleでログイン\r\n          </Button>\r\n          \r\n          <Button colorScheme=\"gray\" onClick={checkSession}>\r\n            セッション確認\r\n          </Button>\r\n          \r\n          <Button variant=\"outline\" onClick={handleLogout}>\r\n            ログアウト\r\n          </Button>\r\n          \r\n          <Button onClick={() => navigate('/login')}>\r\n            通常のログインページへ\r\n          </Button>\r\n        </VStack>\r\n      </VStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TestAuth\n"],"names":["Code","forwardRef","props","ref","styles","useStyleConfig","className","rest","omitThemingProps","jsx","chakra","cx","TestAuth","navigate","useNavigate","useEffect","authListener","supabase","event","session","handleGoogleLogin","data","error","err","handleLogout","checkSession","Box","VStack","Heading","Text","jsxs","Button"],"mappings":"sKAQA,MAAMA,EAAOC,EAAW,SAAeC,EAAOC,EAAK,CACjD,MAAMC,EAASC,EAAe,OAAQH,CAAK,EACrC,CAAE,UAAAI,EAAW,GAAGC,CAAI,EAAKC,EAAiBN,CAAK,EACrD,OAAuBO,EAAAA,IACrBC,EAAO,KACP,CACE,IAAAP,EACA,UAAWQ,EAAG,cAAeT,EAAM,SAAS,EAC5C,GAAGK,EACH,MAAO,CACL,QAAS,eACT,GAAGH,CACX,CACA,CACA,CACA,CAAC,EACDJ,EAAK,YAAc,OCnBnB,MAAMY,EAAW,IAAM,CACrB,MAAMC,EAAWC,EAAA,EAEjBC,EAAAA,UAAU,IAAM,CAEd,KAAM,CAAE,KAAMC,GAAiBC,EAAS,KAAK,kBAAkB,CAACC,EAAOC,IAAY,CASnF,CAAC,EAGD,OAAAF,EAAS,KAAK,aAAa,KAAK,CAAC,CAAE,KAAM,CAAE,QAAAE,CAAA,KAAgB,CAI3D,CAAC,EAEM,IAAM,CACXH,EAAa,aAAa,YAAA,CAC5B,CACF,EAAG,CAAA,CAAE,EAEL,MAAMI,EAAoB,SAAY,CACpC,GAAI,CACF,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAA,EAAU,MAAML,EAAS,KAAK,gBAAgB,CAC1D,SAAU,SACV,QAAS,CACP,WAAY,GAAG,OAAO,SAAS,MAAM,YAAA,CACvC,CACD,EAEGK,IACF,QAAQ,MAAM,eAAgBA,CAAK,EACnC,MAAM,UAAUA,EAAM,OAAO,EAAE,EAMnC,OAASC,EAAK,CACZ,QAAQ,MAAM,oBAAqBA,CAAG,CACxC,CACF,EAEMC,EAAe,SAAY,CAC/B,KAAM,CAAE,MAAAF,CAAA,EAAU,MAAML,EAAS,KAAK,QAAA,EAClCK,GACF,QAAQ,MAAM,gBAAiBA,CAAK,CAMxC,EAEMG,EAAe,SAAY,CAC/B,KAAM,CAAE,KAAM,CAAE,QAAAN,CAAA,EAAW,MAAAG,GAAU,MAAML,EAAS,KAAK,WAAA,EACrDK,EACF,QAAQ,MAAM,uBAAwBA,CAAK,EAK3C,MAAMH,EAAU,iBAAiBA,EAAQ,KAAK,KAAK,GAAK,eAAe,CAE3E,EAEA,OACEV,EAAAA,IAACiB,GAAI,EAAG,EACN,gBAACC,EAAA,CAAO,QAAS,EAAG,MAAM,QACxB,SAAA,CAAAlB,EAAAA,IAACmB,GAAQ,SAAA,cAAW,EAEpBnB,EAAAA,IAACoB,GAAK,SAAA,4BAAyB,QAE9B7B,EAAA,CAAK,EAAG,EAAG,SAAA,6BAEZ,EAEA8B,EAAAA,KAACH,EAAA,CAAO,QAAS,EACf,SAAA,CAAAlB,MAACsB,EAAA,CAAO,YAAY,MAAM,QAASX,EAAmB,SAAA,cAEtD,QAECW,EAAA,CAAO,YAAY,OAAO,QAASN,EAAc,SAAA,UAElD,QAECM,EAAA,CAAO,QAAQ,UAAU,QAASP,EAAc,SAAA,QAEjD,QAECO,EAAA,CAAO,QAAS,IAAMlB,EAAS,QAAQ,EAAG,SAAA,aAAA,CAE3C,CAAA,EACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ","x_google_ignoreList":[0]}