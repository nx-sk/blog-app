{"version":3,"file":"Home-CxRuH8tP.js","sources":["../../src/components/post/FullPostCard.tsx","../../src/components/profile/ProfileSidebar.tsx","../../src/pages/Home.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Box,\n  Heading,\n  Text,\n  HStack,\n  Tag,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Post } from '../../types'\nimport '../../styles/crystalGlass.css'\n\ninterface FullPostCardProps {\n  post: Post\n}\n\nconst FullPostCard = ({ post }: FullPostCardProps) => {\n  const textColor = useColorModeValue('text.primary', 'text.primary')\n  const metaColor = useColorModeValue('text.meta', 'text.meta')\n  const titleColor = useColorModeValue('text.primary', 'text.primary')\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('ja-JP', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    })\n  }\n\n  return (\n    <Box className=\"crystal-glass crystal-glass--surface\" borderRadius=\"xl\" p={{ base: 4, md: 6 }}>\n      <Heading\n        as={RouterLink}\n        to={`/posts/${post.slug || post.id}`}\n        size=\"lg\"\n        fontWeight=\"700\"\n        letterSpacing=\"-0.02em\"\n        color={titleColor}\n        mb={2}\n        _hover={{ textDecoration: 'none', opacity: 0.9 }}\n      >\n        {post.title}\n      </Heading>\n\n      <HStack spacing={4} color={metaColor} fontSize=\"sm\" mb={4}>\n        <Text>{formatDate(post.published_at || post.created_at)}</Text>\n        {post.categories && post.categories.length > 0 && (\n          <HStack spacing={2}>\n            {post.categories.map((category) => (\n              <Tag key={category.id} size=\"sm\" colorScheme=\"purple\">\n                {category.name}\n              </Tag>\n            ))}\n          </HStack>\n        )}\n      </HStack>\n\n      <Box\n        color={textColor}\n        lineHeight={1.8}\n        fontSize=\"md\"\n        maxW=\"660px\"\n        mx=\"auto\"\n        sx={{\n          wordBreak: 'break-word',\n          overflowWrap: 'anywhere',\n          hyphens: 'auto',\n          '& img': {\n            maxWidth: '100%',\n            height: 'auto',\n            display: 'block',\n            borderRadius: '8px',\n            marginTop: '12px',\n            marginBottom: '12px',\n          },\n          '& pre': {\n            overflowX: 'auto',\n            whiteSpace: 'pre',\n          },\n          '& code': {\n            wordBreak: 'break-word',\n            overflowWrap: 'anywhere',\n          },\n          '& a': {\n            overflowWrap: 'anywhere',\n            wordBreak: 'break-word',\n          },\n        }}\n      >\n        <ReactMarkdown remarkPlugins={[remarkGfm]}>{post.content}</ReactMarkdown>\n      </Box>\n    </Box>\n  )\n}\n\nexport default FullPostCard\n","import React from 'react'\nimport { Box, Heading, Text, HStack, Link, Avatar } from '@chakra-ui/react'\n\nconst ProfileSidebar: React.FC = () => {\n  return (\n    <Box w={{ base: '100%', md: '250px' }} flexShrink={0} className=\"crystal-glass crystal-glass--surface\" p={4} borderRadius=\"md\">\n      <HStack spacing={3} mb={3}>\n        <Avatar name=\"Author\" size=\"md\" />\n        <Box>\n          <Heading as=\"h3\" size=\"sm\">Digital Atelier</Heading>\n          <Text fontSize=\"xs\" color=\"text.meta\">Technology, Design & Creative Engineering</Text>\n        </Box>\n      </HStack>\n      <Text fontSize=\"sm\" color=\"text.muted\" lineHeight={1.7}>\n        フルスタックにものづくりを楽しむ個人ブログ。設計メモや実験的な実装の備忘録を中心に更新しています。\n      </Text>\n      <HStack spacing={3} mt={3}>\n        <Link href=\"/\" fontSize=\"xs\" color=\"link.default\">Twitter</Link>\n        <Link href=\"/\" fontSize=\"xs\" color=\"link.default\">GitHub</Link>\n      </HStack>\n    </Box>\n  )\n}\n\nexport default ProfileSidebar\n","import { useEffect, useState, useMemo, useCallback } from 'react'\nimport { Box, Text, Button, HStack } from '@chakra-ui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../store'\nimport { fetchPostsStart } from '../store/slices/postsSlice'\nimport FullPostCard from '../components/post/FullPostCard'\nimport ProfileSidebar from '../components/profile/ProfileSidebar'\nimport Loading from '../components/common/Loading'\nimport '../styles/crystalGlass.css'\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const { posts, loading, error } = useSelector((state: RootState) => state.posts)\n\n  useEffect(() => {\n    dispatch(fetchPostsStart())\n  }, [dispatch])\n\n  const PAGE_SIZE = 3\n  const [page, setPage] = useState(1)\n\n  const sorted = useMemo(() => {\n    return [...posts].sort((a, b) => {\n      const ad = new Date(a.published_at || a.created_at).getTime()\n      const bd = new Date(b.published_at || b.created_at).getTime()\n      return bd - ad\n    })\n  }, [posts])\n\n  const totalPages = useMemo(() => Math.max(1, Math.ceil(sorted.length / PAGE_SIZE)), [sorted.length])\n  const pagePosts = useMemo(\n    () => sorted.slice((page - 1) * PAGE_SIZE, (page - 1) * PAGE_SIZE + PAGE_SIZE),\n    [sorted, page]\n  )\n\n  const prev = useCallback(() => setPage((p) => Math.max(1, p - 1)), [])\n  const next = useCallback(() => setPage((p) => Math.min(totalPages, p + 1)), [totalPages])\n\n  if (loading) {\n    return <Loading />\n  }\n\n  if (error) {\n    return (\n      <Box textAlign=\"center\" py={10}>\n        <Box className=\"crystal-glass crystal-glass--elevated\" maxW=\"400px\" mx=\"auto\">\n          <Text color=\"red.500\" fontSize=\"sm\">\n            エラーが発生しました: {error}\n          </Text>\n        </Box>\n      </Box>\n    )\n  }\n\n  return (\n    <Box\n      display=\"grid\"\n      gap={6}\n      gridTemplateColumns={{ base: '1fr', md: '260px minmax(0, 720px)' }}\n      justifyContent={{ md: 'center' }}\n      alignItems=\"start\"\n    >\n      <Box\n        display={{ base: 'none', md: 'block' }}\n        position=\"sticky\"\n        top={{ base: 0, md: '88px' }}\n        h=\"fit-content\"\n      >\n        <ProfileSidebar />\n      </Box>\n      <Box w=\"full\">\n        <Box\n          className=\"crystal-glass crystal-glass--surface\"\n          borderRadius=\"xl\"\n          p={{ base: 4, md: 6 }}\n          mb={4}\n        >\n          <Text fontSize=\"xs\" color=\"gray.500\" mb={1}>\n            Welcome to\n          </Text>\n          <Text fontSize={{ base: '2xl', md: '3xl' }} fontWeight=\"700\" letterSpacing=\"-0.02em\">\n            Digital Atelier\n          </Text>\n          <Text fontSize=\"sm\" color=\"gray.600\" mt={2}>\n            Technology, Design & Creative Engineering\n          </Text>\n        </Box>\n\n        <Box display=\"grid\" gridTemplateColumns=\"1fr\" gap={6}>\n          {pagePosts.map((post) => (\n            <FullPostCard key={post.id} post={post} />\n          ))}\n        </Box>\n\n        <HStack justify=\"space-between\" mt={4}>\n          <Button size=\"sm\" onClick={prev} isDisabled={page === 1} variant=\"outline\">前へ</Button>\n          <Text fontSize=\"sm\" color=\"gray.600\">{page} / {totalPages}</Text>\n          <Button size=\"sm\" onClick={next} isDisabled={page === totalPages} variant=\"outline\">次へ</Button>\n        </HStack>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Home\n"],"names":["FullPostCard","post","textColor","useColorModeValue","metaColor","titleColor","formatDate","dateString","jsxs","Box","jsx","Heading","RouterLink","HStack","Text","category","Tag","ReactMarkdown","remarkGfm","ProfileSidebar","Avatar","Link","Home","dispatch","useDispatch","posts","loading","error","useSelector","state","useEffect","fetchPostsStart","PAGE_SIZE","page","setPage","useState","sorted","useMemo","a","b","ad","totalPages","pagePosts","prev","useCallback","p","next","Loading","Button"],"mappings":"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"}