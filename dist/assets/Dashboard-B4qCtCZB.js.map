{"version":3,"file":"Dashboard-B4qCtCZB.js","sources":["../../node_modules/@chakra-ui/react/dist/esm/stat/stat.mjs","../../node_modules/@chakra-ui/react/dist/esm/stat/stat-help-text.mjs","../../node_modules/@chakra-ui/react/dist/esm/stat/stat-label.mjs","../../node_modules/@chakra-ui/react/dist/esm/stat/stat-number.mjs","../../src/pages/admin/Dashboard.tsx"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [StatStylesProvider, useStatStyles] = createContext({\n  name: `StatStylesContext`,\n  errorMessage: `useStatStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Stat />\" `\n});\nconst Stat = forwardRef(function Stat2(props, ref) {\n  const styles = useMultiStyleConfig(\"Stat\", props);\n  const statStyles = {\n    position: \"relative\",\n    flex: \"1 1 0%\",\n    ...styles.container\n  };\n  const { className, children, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(StatStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-stat\", className),\n      __css: statStyles,\n      children: /* @__PURE__ */ jsx(\"dl\", { children })\n    }\n  ) });\n});\nStat.displayName = \"Stat\";\n\nexport { Stat, useStatStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useStatStyles } from './stat.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst StatHelpText = forwardRef(\n  function StatHelpText2(props, ref) {\n    const styles = useStatStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.dd,\n      {\n        ref,\n        ...props,\n        className: cx(\"chakra-stat__help-text\", props.className),\n        __css: styles.helpText\n      }\n    );\n  }\n);\nStatHelpText.displayName = \"StatHelpText\";\n\nexport { StatHelpText };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useStatStyles } from './stat.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst StatLabel = forwardRef(\n  function StatLabel2(props, ref) {\n    const styles = useStatStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.dt,\n      {\n        ref,\n        ...props,\n        className: cx(\"chakra-stat__label\", props.className),\n        __css: styles.label\n      }\n    );\n  }\n);\nStatLabel.displayName = \"StatLabel\";\n\nexport { StatLabel };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useStatStyles } from './stat.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst StatNumber = forwardRef(\n  function StatNumber2(props, ref) {\n    const styles = useStatStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.dd,\n      {\n        ref,\n        ...props,\n        className: cx(\"chakra-stat__number\", props.className),\n        __css: {\n          ...styles.number,\n          fontFeatureSettings: \"pnum\",\n          fontVariantNumeric: \"proportional-nums\"\n        }\n      }\n    );\n  }\n);\nStatNumber.displayName = \"StatNumber\";\n\nexport { StatNumber };\n","import React, { useEffect } from 'react'\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Grid,\r\n  Card,\r\n  CardBody,\r\n  Text,\r\n  Button,\r\n  VStack,\r\n  HStack,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\n} from '@chakra-ui/react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../store'\r\nimport { fetchPostsStart } from '../../store/slices/postsSlice'\r\nimport { AddIcon, EditIcon } from '@chakra-ui/icons'\nimport '../../styles/crystalGlass.css'\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch()\r\n  const { posts, loading } = useSelector((state: RootState) => state.posts)\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n\r\n  const cardBg = 'transparent'\n\r\n  useEffect(() => {\r\n    dispatch(fetchPostsStart())\r\n  }, [dispatch])\r\n\r\n  const publishedPosts = posts.filter(post => post.status === 'published')\r\n  const draftPosts = posts.filter(post => post.status === 'draft')\r\n\r\n  return (\n    <Box w={{ base: '100%', xl: '1000px' }} mr=\"auto\">\n      <VStack spacing={6} align=\"stretch\">\n        <HStack justify=\"space-between\" align=\"center\">\n          {/* 見出しは省略してアクションのみ配置 */}\n          <Box />\n          <Button\n            as={RouterLink}\n            to=\"/admin/posts/new\"\n            colorScheme=\"brand\"\n            leftIcon={<AddIcon />}\n          >\n            新規記事作成\n          </Button>\n        </HStack>\n\r\n        {/* 統計情報 */}\r\n        <Grid templateColumns={{ base: '1fr', md: 'repeat(3, 1fr)' }} gap={6}>\n          <Card bg={cardBg} className=\"crystal-glass crystal-glass--elevated\">\n            <CardBody>\n              <Stat>\n                <StatLabel>総記事数</StatLabel>\n                <StatNumber>{posts.length}</StatNumber>\n                <StatHelpText>すべての記事</StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} className=\"crystal-glass crystal-glass--elevated\">\n            <CardBody>\n              <Stat>\n                <StatLabel>公開記事</StatLabel>\n                <StatNumber>{publishedPosts.length}</StatNumber>\n                <StatHelpText>公開中の記事</StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} className=\"crystal-glass crystal-glass--elevated\">\n            <CardBody>\n              <Stat>\n                <StatLabel>下書き</StatLabel>\n                <StatNumber>{draftPosts.length}</StatNumber>\n                <StatHelpText>下書き状態の記事</StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n        </Grid>\n\r\n        {/* 最近の記事 */}\r\n        <Card bg={cardBg} className=\"crystal-glass crystal-glass--elevated\">\n          <CardBody>\n            <VStack spacing={4} align=\"stretch\">\n              <HStack justify=\"space-between\" align=\"center\">\r\n                <Heading as=\"h2\" size=\"md\">\r\n                  最近の記事\r\n                </Heading>\r\n                <Button\r\n                  as={RouterLink}\r\n                  to=\"/admin/posts\"\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  すべて見る\r\n                </Button>\r\n              </HStack>\r\n\r\n              {loading ? (\r\n                <Text>読み込み中...</Text>\r\n              ) : posts.length === 0 ? (\r\n                <Text color=\"gray.500\">記事がありません</Text>\r\n              ) : (\r\n                <VStack spacing={3} align=\"stretch\">\n                  {posts.slice(0, 5).map((post) => (\n                    <HStack\n                      key={post.id}\n                      justify=\"space-between\"\n                      p={3}\n                      borderRadius=\"md\"\n                      className=\"crystal-glass crystal-glass--surface\"\n                    >\n                      <VStack align=\"start\" spacing={1}>\r\n                        <Text fontWeight=\"bold\" noOfLines={1}>\r\n                          {post.title}\r\n                        </Text>\r\n                        <Text fontSize=\"sm\" color=\"gray.500\">\r\n                          {post.status === 'published' ? '公開' : '下書き'} •{' '}\r\n                          {new Date(post.created_at).toLocaleDateString('ja-JP')}\r\n                        </Text>\r\n                      </VStack>\r\n                      <Button\r\n                        as={RouterLink}\r\n                        to={`/admin/posts/${post.id}/edit`}\r\n                        size=\"sm\"\r\n                        variant=\"outline\"\r\n                        leftIcon={<EditIcon />}\r\n                      >\r\n                        編集\r\n                      </Button>\r\n                    </HStack>\r\n                  ))}\r\n                </VStack>\r\n              )}\r\n            </VStack>\r\n          </CardBody>\r\n        </Card>\r\n      </VStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Dashboard\n"],"names":["StatStylesProvider","useStatStyles","createContext","Stat","forwardRef","props","ref","styles","useMultiStyleConfig","statStyles","className","children","rest","omitThemingProps","jsx","chakra","cx","StatHelpText","StatLabel","StatNumber","Dashboard","dispatch","useDispatch","posts","loading","useSelector","state","user","cardBg","useEffect","fetchPostsStart","publishedPosts","post","draftPosts","Box","jsxs","VStack","HStack","Button","RouterLink","AddIcon","Grid","Card","CardBody","Heading","Text","EditIcon"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}